{"version":3,"file":"main.min.js","sources":["../src/main.js"],"sourcesContent":["// This file is part of Moodle - http://moodle.org/\n//\n// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\n\n/**\n * Main js functions for block_timezoneclock\n *\n * @module block_timezoneclock/main\n * @copyright 2022 Harshil Patel <harshil8595@gmail.com>\n * @license   http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n */\nimport {BlockTimezoneclockDynamicForm as DynamicForm} from './dynamicform';\nimport {replaceNodeContents} from 'core/templates';\nimport Fragment from 'core/fragment';\nimport {exception as displayException} from 'core/notification';\n\nconst dtOptions = {\n    year: 'numeric',\n    month: 'short',\n    weekday: 'short',\n    day: 'numeric',\n    hour: 'numeric',\n    minute: 'numeric',\n    second: 'numeric',\n    hour12: true\n};\n\nconst getDateInfo = (timeZone, timestamp = new Date(), customdateOptions = {}) => {\n    customdateOptions = {...dtOptions, ...customdateOptions, timeZone};\n    const t1 = new Intl.DateTimeFormat('en-us', customdateOptions);\n    const dateInfo = t1.formatToParts(timestamp).reduce((a, i) => ({...a, [i.type]: i.value}), {});\n    return {...dateInfo, day: dateInfo.day.padStart(2, 0)};\n};\n\nconst updateTime = () => {\n    document.querySelectorAll('[data-region=\"clock\"]:not([data-autoupdate=\"false\"])')\n    .forEach(clock => {\n        const datefractions = getDateInfo(clock.dataset.timezone);\n        clock.querySelectorAll('[data-fraction]').forEach(sp => {\n            const {fraction, unit} = sp.dataset;\n            if (unit?.toString() !== datefractions[fraction].toString()) {\n                sp.style.setProperty(`--unit`, datefractions[fraction]);\n                sp.setAttribute('data-unit', datefractions[fraction]);\n                sp.firstElementChild.innerText = datefractions[fraction].toString();\n            }\n        });\n    });\n    setTimeout(updateTime, 1000);\n};\n\nexport const initBlock = () => {\n    const d = new Date();\n    setTimeout(updateTime, 1000 - d.getMilliseconds());\n};\n\nexport const registerForm = formUniqId => {\n    const form = document.getElementById(formUniqId);\n    const r = new RegExp(`(day|month|year|hour|minute)`);\n    if (form) {\n        const dForm = new DynamicForm(form, form.dataset.formClass);\n        const getTypeFromElement = sel => sel.name.match(r).pop();\n        const generateTimeStamp = () => {\n            const timestampInput = dForm.getFormNode().elements.timestamp;\n            const timezoneSelection = dForm.getFormNode().elements.timezone;\n            const dateTimeNode = dForm.getFormNode().querySelector('[data-fieldtype=\"date_time_selector\"]');\n            const fractions = [...dateTimeNode.querySelectorAll('select')]\n            .reduce((acc, sel) => ({...acc, [getTypeFromElement(sel)]: sel.value.padStart(2, 0)}), {});\n            const {year, month, day, hour, minute} = fractions;\n\n            const date = new Date(`${year}-${month}-${day}T${hour}:${minute}:00.000`);\n            const dateinfo = getDateInfo(timezoneSelection.value, date, {timeZoneName: 'longOffset'});\n            const gmtOffset = dateinfo.timeZoneName.split('GMT').pop();\n\n            const d = new Date(date + gmtOffset);\n            timestampInput.value = Math.round(d.valueOf() / 1000);\n        };\n        const clientTimezone = Intl.DateTimeFormat().resolvedOptions().timeZone;\n        dForm.load({...form.dataset, timezone: clientTimezone}).then(() => {\n            if (form.nextElementSibling.childElementCount === 0) {\n                dForm.submitFormAjax({firstload: 1});\n            }\n            return;\n        }).catch(displayException);\n        dForm.addEventListener(dForm.events.FORM_SUBMITTED, e => {\n            e.preventDefault();\n            replaceNodeContents(form.nextElementSibling, e.detail.html,\n                Fragment.processCollectedJavascript(e.detail.js));\n        });\n        dForm.addEventListener('change', e => {\n            const dateTimeNode = e.target.closest('[data-fieldtype=\"date_time_selector\"]');\n            const timezoneSelection = e.target.closest('[name=\"timezone\"]');\n            if (dateTimeNode || timezoneSelection) {\n                generateTimeStamp();\n            }\n        });\n        dForm.addEventListener('change', e => {\n            const timestampInput = e.target.closest('[name=\"timestamp\"]');\n            const timezoneSelection = dForm.getFormNode().elements.timezone;\n            const dateTimeNode = dForm.getFormNode().querySelector('[data-fieldtype=\"date_time_selector\"]');\n            if (timestampInput) {\n                const d = new Date(0);\n                d.setUTCSeconds(timestampInput.value);\n                const info = getDateInfo(timezoneSelection.value, d, {month: 'numeric', hour12: false});\n                info.hour = Number(info.hour);\n                dateTimeNode.querySelectorAll('select').forEach(sel => {\n                    sel.value = info[getTypeFromElement(sel)];\n                });\n            }\n        });\n    }\n};\n"],"names":["dtOptions","year","month","weekday","day","hour","minute","second","hour12","getDateInfo","timeZone","timestamp","Date","customdateOptions","t1","Intl","DateTimeFormat","dateInfo","formatToParts","reduce","a","i","type","value","padStart","updateTime","document","querySelectorAll","forEach","clock","datefractions","dataset","timezone","sp","fraction","unit","toString","style","setProperty","setAttribute","firstElementChild","innerText","setTimeout","d","getMilliseconds","formUniqId","form","getElementById","r","RegExp","dForm","DynamicForm","formClass","getTypeFromElement","sel","name","match","pop","generateTimeStamp","timestampInput","getFormNode","elements","timezoneSelection","fractions","querySelector","acc","date","gmtOffset","timeZoneName","split","Math","round","valueOf","clientTimezone","resolvedOptions","load","then","nextElementSibling","childElementCount","submitFormAjax","firstload","catch","displayException","addEventListener","events","FORM_SUBMITTED","e","preventDefault","detail","html","Fragment","processCollectedJavascript","js","dateTimeNode","target","closest","setUTCSeconds","info","Number"],"mappings":"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"}