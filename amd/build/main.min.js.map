{"version":3,"file":"main.min.js","sources":["../src/main.js"],"sourcesContent":["// This file is part of Moodle - http://moodle.org/\n//\n// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\n\n/**\n * Main js functions for block_timezoneclock\n *\n * @module block_timezoneclock/main\n * @copyright 2022 Harshil Patel <harshil8595@gmail.com>\n * @license   http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n */\nimport DynamicForm from 'core_form/dynamicform';\nimport {replaceNodeContents} from 'core/templates';\nimport {processCollectedJavascript} from 'core/fragment';\n\nconst dtOptions = {\n    year: 'numeric',\n    month: 'short',\n    weekday: 'short',\n    day: 'numeric',\n    hour: 'numeric',\n    minute: 'numeric',\n    second: 'numeric',\n    hour12: true\n};\n\nconst getDateInfo = (timeZone, timestamp = new Date(), customdateOptions = {}) => {\n    customdateOptions = {...dtOptions, ...customdateOptions, timeZone};\n    const t1 = new Intl.DateTimeFormat('en-us', customdateOptions);\n    const dateInfo = t1.formatToParts(timestamp).reduce((a, i) => ({...a, [i.type]: i.value}), {});\n    return {...dateInfo, day: dateInfo.day.padStart(2, 0)};\n};\n\nconst updateTime = () => document.querySelectorAll('[data-region=\"clock\"]:not([data-autoupdate=\"false\"])')\n    .forEach(clock => {\n        const datefractions = getDateInfo(clock.dataset.timezone);\n        clock.querySelectorAll('[data-fraction]').forEach(sp => {\n            const {fraction, unit} = sp.dataset;\n            if (unit?.toString() !== datefractions[fraction].toString()) {\n                sp.style.setProperty(`--unit`, datefractions[fraction]);\n                sp.setAttribute('data-unit', datefractions[fraction]);\n                sp.firstElementChild.innerText = datefractions[fraction].toString();\n            }\n        });\n});\n\nexport const initBlock = () => {\n    setInterval(updateTime, 1000);\n};\n\nexport const registerForm = formUniqId => {\n    const form = document.getElementById(formUniqId);\n    const r = new RegExp(`(day|month|year|hour|minute)`);\n    if (form) {\n        const dForm = new DynamicForm(form, form.dataset.formClass);\n        const getTypeFromElement = sel => sel.name.match(r).pop();\n        const generateTimeStamp = () => {\n            const timestampInput = dForm.getFormNode().elements.timestamp;\n            const timezoneSelection = dForm.getFormNode().elements.timezone;\n            const dateTimeNode = dForm.getFormNode().querySelector('[data-fieldtype=\"date_time_selector\"]');\n            const fractions = [...dateTimeNode.querySelectorAll('select')]\n            .reduce((acc, sel) => ({...acc, [getTypeFromElement(sel)]: sel.value.padStart(2, 0)}), {});\n            const {year, month, day, hour, minute} = fractions;\n\n            const date = new Date(`${year}-${month}-${day}T${hour}:${minute}:00.000`);\n            const dateinfo = getDateInfo(timezoneSelection.value, date, {timeZoneName: 'longOffset'});\n            const gmtOffset = dateinfo.timeZoneName.split('GMT').pop();\n\n            const d = new Date(date + gmtOffset);\n            timestampInput.value = Math.round(d.valueOf() / 1000);\n        };\n        dForm.load({\n            instanceid: form.closest('[data-instance-id]').getAttribute('data-instance-id')\n        });\n        dForm.addEventListener(dForm.events.FORM_SUBMITTED, e => {\n            e.preventDefault();\n            replaceNodeContents(form.nextElementSibling, e.detail.html, processCollectedJavascript(e.detail.js));\n        });\n        dForm.addEventListener('change', e => {\n            const dateTimeNode = e.target.closest('[data-fieldtype=\"date_time_selector\"]');\n            const timezoneSelection = e.target.closest('[name=\"timezone\"]');\n            if (dateTimeNode || timezoneSelection) {\n                generateTimeStamp();\n            }\n        });\n        dForm.addEventListener('change', e => {\n            const timestampInput = e.target.closest('[name=\"timestamp\"]');\n            const timezoneSelection = dForm.getFormNode().elements.timezone;\n            const dateTimeNode = dForm.getFormNode().querySelector('[data-fieldtype=\"date_time_selector\"]');\n            if (timestampInput) {\n                const d = new Date(0);\n                d.setUTCSeconds(timestampInput.value);\n                const info = getDateInfo(timezoneSelection.value, d, {month: 'numeric', hour12: false});\n                info.hour = Number(info.hour);\n                dateTimeNode.querySelectorAll('select').forEach(sel => {\n                    sel.value = info[getTypeFromElement(sel)];\n                });\n            }\n        });\n    }\n};\n"],"names":["dtOptions","year","month","weekday","day","hour","minute","second","hour12","getDateInfo","timeZone","timestamp","Date","customdateOptions","t1","Intl","DateTimeFormat","dateInfo","formatToParts","reduce","a","i","type","value","padStart","updateTime","document","querySelectorAll","forEach","clock","datefractions","dataset","timezone","sp","fraction","unit","toString","style","setProperty","setAttribute","firstElementChild","innerText","setInterval","formUniqId","form","getElementById","r","RegExp","dForm","DynamicForm","formClass","getTypeFromElement","sel","name","match","pop","generateTimeStamp","timestampInput","getFormNode","elements","timezoneSelection","fractions","querySelector","acc","date","gmtOffset","timeZoneName","split","d","Math","round","valueOf","load","instanceid","closest","getAttribute","addEventListener","events","FORM_SUBMITTED","e","preventDefault","nextElementSibling","detail","html","js","dateTimeNode","target","setUTCSeconds","info","Number"],"mappings":";;;;;;;qLA0BMA,UAAY,CACdC,KAAM,UACNC,MAAO,QACPC,QAAS,QACTC,IAAK,UACLC,KAAM,UACNC,OAAQ,UACRC,OAAQ,UACRC,QAAQ,GAGNC,YAAc,SAACC,cAAUC,iEAAY,IAAIC,KAAQC,yEAAoB,GACvEA,kBAAoB,IAAIb,aAAca,kBAAmBH,SAAAA,gBACnDI,GAAK,IAAIC,KAAKC,eAAe,QAASH,mBACtCI,SAAWH,GAAGI,cAAcP,WAAWQ,QAAO,CAACC,EAAGC,SAAWD,GAAIC,EAAEC,MAAOD,EAAEE,SAAS,UACpF,IAAIN,SAAUb,IAAKa,SAASb,IAAIoB,SAAS,EAAG,KAGjDC,WAAa,IAAMC,SAASC,iBAAiB,wDAC9CC,SAAQC,cACCC,cAAgBrB,YAAYoB,MAAME,QAAQC,UAChDH,MAAMF,iBAAiB,mBAAmBC,SAAQK,WACxCC,SAACA,SAADC,KAAWA,MAAQF,GAAGF,SACxBI,MAAAA,YAAAA,KAAMC,cAAeN,cAAcI,UAAUE,aAC7CH,GAAGI,MAAMC,qBAAsBR,cAAcI,WAC7CD,GAAGM,aAAa,YAAaT,cAAcI,WAC3CD,GAAGO,kBAAkBC,UAAYX,cAAcI,UAAUE,qCAKhD,KACrBM,YAAYjB,WAAY,4BAGAkB,mBAClBC,KAAOlB,SAASmB,eAAeF,YAC/BG,EAAI,IAAIC,0CACVH,KAAM,OACAI,MAAQ,IAAIC,qBAAYL,KAAMA,KAAKb,QAAQmB,WAC3CC,mBAAqBC,KAAOA,IAAIC,KAAKC,MAAMR,GAAGS,MAC9CC,kBAAoB,WAChBC,eAAiBT,MAAMU,cAAcC,SAAShD,UAC9CiD,kBAAoBZ,MAAMU,cAAcC,SAAS3B,SAEjD6B,UAAY,IADGb,MAAMU,cAAcI,cAAc,yCACpBnC,iBAAiB,WACnDR,QAAO,CAAC4C,IAAKX,WAAaW,KAAMZ,mBAAmBC,MAAOA,IAAI7B,MAAMC,SAAS,EAAG,MAAM,KACjFvB,KAACA,KAADC,MAAOA,MAAPE,IAAcA,IAAdC,KAAmBA,KAAnBC,OAAyBA,QAAUuD,UAEnCG,KAAO,IAAIpD,eAAQX,iBAAQC,kBAASE,gBAAOC,iBAAQC,mBAEnD2D,UADWxD,YAAYmD,kBAAkBrC,MAAOyC,KAAM,CAACE,aAAc,eAChDA,aAAaC,MAAM,OAAOZ,MAE/Ca,EAAI,IAAIxD,KAAKoD,KAAOC,WAC1BR,eAAelC,MAAQ8C,KAAKC,MAAMF,EAAEG,UAAY,MAEpDvB,MAAMwB,KAAK,CACPC,WAAY7B,KAAK8B,QAAQ,sBAAsBC,aAAa,sBAEhE3B,MAAM4B,iBAAiB5B,MAAM6B,OAAOC,gBAAgBC,IAChDA,EAAEC,oDACkBpC,KAAKqC,mBAAoBF,EAAEG,OAAOC,MAAM,wCAA2BJ,EAAEG,OAAOE,QAEpGpC,MAAM4B,iBAAiB,UAAUG,UACvBM,aAAeN,EAAEO,OAAOZ,QAAQ,yCAChCd,kBAAoBmB,EAAEO,OAAOZ,QAAQ,sBACvCW,cAAgBzB,oBAChBJ,uBAGRR,MAAM4B,iBAAiB,UAAUG,UACvBtB,eAAiBsB,EAAEO,OAAOZ,QAAQ,sBAClCd,kBAAoBZ,MAAMU,cAAcC,SAAS3B,SACjDqD,aAAerC,MAAMU,cAAcI,cAAc,4CACnDL,eAAgB,OACVW,EAAI,IAAIxD,KAAK,GACnBwD,EAAEmB,cAAc9B,eAAelC,aACzBiE,KAAO/E,YAAYmD,kBAAkBrC,MAAO6C,EAAG,CAAClE,MAAO,UAAWM,QAAQ,IAChFgF,KAAKnF,KAAOoF,OAAOD,KAAKnF,MACxBgF,aAAa1D,iBAAiB,UAAUC,SAAQwB,MAC5CA,IAAI7B,MAAQiE,KAAKrC,mBAAmBC"}